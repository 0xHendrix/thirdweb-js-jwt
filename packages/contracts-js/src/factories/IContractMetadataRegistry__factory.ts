/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IContractMetadataRegistry,
  IContractMetadataRegistryInterface,
} from "../IContractMetadataRegistry";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataUri",
        type: "string",
      },
    ],
    name: "MetadataRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataUri",
        type: "string",
      },
    ],
    name: "registerMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IContractMetadataRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IContractMetadataRegistryInterface {
    return new utils.Interface(_abi) as IContractMetadataRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IContractMetadataRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IContractMetadataRegistry;
  }
}
